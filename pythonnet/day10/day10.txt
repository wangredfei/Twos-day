前情回顾

1. 多线程并发模型
2. socketserver模块
3. HTTPServer第二版
4. 协程
   什么是协程?   本质就是可以暂停执行的函数
   greenlet
       greenlet()  switch()

   gevent
       spawn()   joinall()   sleep()   monkey
****************************************************

项目练习

电子词典 

功能说明 : 
1. 用户可以登录和注册
   登录凭借用户名密码即可
   注册要求用户必须填写用户名密码,其他内容自定
   用户名不能重复,且用户数据可以长期保存

2. 服务端和客户端,要求可以满足多个客户端同时登陆

3. 客户端 启动后即进入一级界面,功能如下
  
     注册   登陆   退出

   * 如果注册或者登陆失败,返回一级界面

4. 如果用户登录成功即可进入二级界面,功能如下

     查词    查看历史记录    注销

     查词 : 可以循环查词,输入单词,得到单词解释
            输入##退出查词

	    单词本 : 每行一个单词
	             单词按从小到大排列
		     单词和解释之间有空格

     历史记录: 选择该项即可显示当前登录用户最近的查词           记录.(可以显示左右,也可以显示最近10条)
               格式:   name    word    time
     注销 : 回到一级界面

1. 确定技术点
   
   数据库使用 : mysql
   确定单词查询方法 : 文本数据库?
       文本  数据库
   确定套接字和并发方法 : 什么套接字,什么并发?
       tcp   多进程

2. 建立数据库和数据表
  
   确定几个表,表的关系,表的字段,字段类型

   create database dict default charset=utf8;
   
   用户 :  id   name  passwd 
   
   create table user (id int primary key auto_increment,name varchar(32) not null,passwd varchar(16) default '000000');

   历史记录: id   name    word     time

   create table hist (id int primary key auto_increment,name varchar(32) not null,word varchar(128) not null,time varchar(128));

   单词表 :  id      word     interpret

   create table words (id int primary key auto_increment,word varchar(128),interpret text);

   如果使用数据库查词,将单词插入数据库

3. 项目结构分析,分为几部分,几个功能模块

   服务端   创建套接字 --> 创建父子进程 -->子进程循环          接收客户端请求-->父进程继续等待其他客户端          连接

            请求类型 : 注册,登录,查询,历史记录,退出

   客户端   创建套接字 --> 发起连接请求 --> 进入一级          界面 --> 循环发送请求 --> 登录以后循环发          送请求


4. 搭建通信模型

5. 具体功能实现
   
   注册
       客户端 : 1. 输入注册信息
                2. 将信息发送给服务器
		3. 等待得到服务器反馈

       服务端 : 1. 接收请求
                2. 判断是否允许注册
		3. 将结果反馈给用户
		4. 将注册信息插入数据库

   登录
       客户端 : 1. 输入用户名密码
                2. 将请求发送给服务端
		3. 得到服务端反馈
		4. 进入二级界面
       服务端 : 1. 接收请求
                2. 验证是否允许登录
		3. 反馈结果
     

   查词
	客户端 :  1. 发送请求 Q  name  word
	          2. 得到反馈结果
		  3. ##退出
        服务端 : 1. 接收请求
	         2. 查找单词 
		 3. 反馈结果
		 4. 插入历史记录

   历史记录


cookie

import getpass
getpass.getpass()
功能: 隐藏密码输入

作业 :  1. 梳理电子词典代码
        2. 对进程线程网络总结